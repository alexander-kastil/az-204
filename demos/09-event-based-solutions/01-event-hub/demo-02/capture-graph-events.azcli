env=$RANDOM
loc=westeurope
grp=az204-m09-graphchanges-eventhub-$env
evns=graphevents-ns-$env
hub=graphevents-hub-$env
storage=graphevents$env
evhpolicyname=grapheventspolicy
kv=m10-graphevents-$env
kvsecret=graphConStr

az group create -l $loc -n $grp

az eventhubs namespace create --name $evns -g $grp --sku Basic -l $loc
az eventhubs eventhub create --name $hub --namespace-name $evns -g $grp --cleanup-policy Delete --partition-count 2 --retention-time 1 
az eventhubs eventhub authorization-rule create --name $evhpolicyname --eventhub-name $hub --namespace-name $evns -g $grp --rights Send Listen

evtHubConStr=`az eventhubs eventhub authorization-rule keys list --name $evhpolicyname --eventhub-name $hub --namespace-name $evns -g $grp --query "primaryConnectionString" --output tsv`

az keyvault create --name $kv -g $grp -l $loc --sku standard --retention-days 90
kvid=$(az keyvault show -n $kv -g $grp --query id -o tsv)

roleid=$(az role definition list --name "Key Vault Secrets Officer" --query [0].id -o tsv)

# add the current user
currUserId=$(az ad signed-in-user show --query id -o tsv)
az role assignment create --role $roleid --assignee $currUserId --scope $kvid

# add the connection string to the key vault
az keyvault secret set --name $kvsecret --value $evtHubConStr --vault-name $kv

# add permisions to the graph change tracking service principal
graphspn=$(az ad sp list --display-name 'Microsoft Graph Change Tracking' --query "[].appId" --output tsv)
az role assignment create --role $roleid --assignee $graphspn --scope $kvid

keyvaulturi=$(az keyvault show --name $kv -g $grp --query "properties.vaultUri" --output tsv)

domain=$(az ad signed-in-user show --query 'userPrincipalName' | cut -d '@' -f 2 | sed 's/\"//')
notificationUrl="EventHub:${keyvaulturi}secrets/${kvsecret}?tenantId=${domain}"

echo "Update in subscribe-change-notification.http: ${notificationUrl}"
echo "Update in EventHubKey of local.settings.json in graph-processor: ${evtHubConStr}"