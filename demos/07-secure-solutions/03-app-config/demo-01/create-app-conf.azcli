env=dev
grp=az204-m07-secure-solutions-$env
loc=westeurope
cfg=foodconfig-$env
vault=foodvault-$env
app=config-api-$env
plan=config-plan-$env

# create appconfig and add a value
appconfigid=$(az appconfig create -g $grp -n $cfg -l $loc --sku free --query id -o tsv)
az appconfig kv set -n $cfg --key "Settings:Title" --value "App Config Demo Dev" -y
az appconfig kv set -n $cfg -g $grp --key "Settings:Title" --value "App Config Demo" -y --label production

az appconfig kv set -n $cfg --key "Settings:Sentinel" --value 1 -y 
az appconfig kv set -n $cfg --key "Settings:Sentinel" --value 1 -y --label production

# app config key-vault binding
cfgmi=$(az appconfig identity assign -g $grp -n $cfg --query principalId -o tsv)
az keyvault set-policy -n $vault --object-id $cfgmi --secret-permissions get list

az appconfig kv set-keyvault -n $cfg --key "Settings:DBConnectionString" --secret-identifier "https://$vault.vault.azure.net/Secrets/conSQLite" -y
az appconfig kv set-keyvault -n $cfg --key "Settings:DBConnectionString" --secret-identifier "https://$vault.vault.azure.net/Secrets/conSQLServer" -y --label production

# alternative: keyvault policy assignment using service principal
# principal=http://foodprincipal
# az ad sp create-for-rbac -n $principal --sdk-auth
# az keyvault set-policy -n $vault --spn $principal --secret-permissions get list

# create hosting webapp and add keyvault permissions to managed identity
cd config-service-api
az webapp up -n $app -g $grp -p $plan -l $loc --sku Free --runtime "dotnet:6" 
cd ..

webmi=$(az webapp identity assign -g $grp -n $app --query principalId -o tsv)
az keyvault set-policy -n $vault --object-id $webmi --secret-permissions get list

sleep 15 # wait for managed identity to propagate

# add app config reader permissions to managed identity and add the endpoint to webapp config
az role assignment create --role "App Configuration Data Reader" --assignee $webmi --scope $appconfigid
configEP=$(az appconfig list -g $grp --query "[?name=='$cfg'].endpoint" -o tsv)
configCon=$(az appconfig credential list --name $cfg --query [0].connectionString -o tsv)
az webapp config appsettings set -g $grp -n $app --settings "Settings:AppConfigEndpoint=$configEP"
az webapp config appsettings set -g $grp -n $app --settings "Settings:AppConfigConnection=$configCon"

az webapp restart -g $grp -n $app

# create a feature flag and turn it on
az appconfig feature set -n $cfg --feature PremiumFeature -y
az appconfig feature set -n $cfg --feature PremiumFeature -y --label production
az appconfig feature enable -n $cfg --feature PremiumFeature -y