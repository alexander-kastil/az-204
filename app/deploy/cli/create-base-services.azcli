env=dev
loc=westeurope
grp=foodapp-$env
mi=foodappmi-$env
vault=foodvault-$env
cfg=foodcfg-$env
acr=az204demos$env
acaenv=foodace-$env
storageAcct=foodstorage$env
ws=foodlogs-$env
ace=foodace-$env
ai=foodai-$env
dbacct=food-$env
dbname=fooddb-$env
sbns=foodsbns$env

az group create -n $grp -l $loc

# Key Vault
az keyvault create -l $loc -n $vault -g $grp --sku Standard

# Managed Identity
miId=$(az identity create -g $grp -n $mi --query principalId -o tsv)
az keyvault set-policy -n $vault --object-id $mi --secret-permissions list get

# ACR
az acr create -g $grp -n $acr --sku Basic
az acr login --name $acr
az acr update -n $acr --admin-enabled true
acrPwd=$(az acr credential show -n $acr --query passwords[0].value -o tsv) 
az keyvault secret set --vault-name $vault --name "acrPassword" --value $acrPwd

# ACA
az containerapp env create -n $acea -g $grp -l $loc --no-wait

# Storage Account
az storage account create -n $storageAcct -g $grp -l $loc --sku Standard_LRS
az storage container create -n invoices --account-name $storageAcct --account-key $storageKey
az storage container create -n pictures --account-name $storageAcct --account-key $storageKey
az storage container create -n prictures-drop --account-name $storageAcct --account-key $storageKey
az storage queue create -n food-orders --account-name $storageAcct --account-key $storageKey
storageKey=$(az storage account keys list -n $storageAcct -g $grp --query "[0].value" -o tsv)
storageConStr=$(az storage account show-connection-string -n $acct -g $grp --query connectionString -o tsv)
az keyvault secret set --vault-name $vault --name "storageKey" --value $storageKey
az keyvault secret set --vault-name $vault --name "logsWSkey" --value $storageConStr

# Log Analytics & Application Insights
wsId=$(az monitor log-analytics workspace create -g $grp --workspace-name $ws --query  id -o tsv)

az monitor app-insights component create --app $ai --location $loc --kind web -g $grp --application-type web --workspace $wsId
aiKey=$(az monitor app-insights component show --app $ai -g $grp --query instrumentationKey -o tsv)                                    
aiConString=$(az monitor app-insights component show --app $ai -g $grp --query connectionString -o tsv) 
az keyvault secret set --vault-name $vault --name "aiKey" --value $aiKey
az keyvault secret set --vault-name $vault --name "aiConStr" --value $aiConString

# Cosmos DB
az cosmosdb create --name $dbacct --kind GlobalDocumentDB -g $grp --enable-free-tier true
az cosmosdb sql database create --account-name $dbacct --name $dbname -g $grp
cosmosCS=$(az cosmosdb list-connection-strings -n $dbacct -g $grp --query connectionStrings[0].connectionString -o tsv)
az keyvault secret set --vault-name $vault --name "cosmosConStr" --value $cosmosCS

az cosmosdb sql container create --account-name $dbacct --database-name $dbname --name orders --partition-key-path "/customerId"  --throughput 1000 -g $grp
az cosmosdb sql container create --account-name $dbacct --database-name $dbname --name payments --partition-key-path "/customerId"  --throughput 1000 -g $grp

# Service Bus
az servicebus namespace create -g $grp -n $sbns -l $loc --sku Basic
